---
- hosts: localhost
  become: true
  vars:
     namespace: 100ms

  tasks:
    - name: Check if kubectl is installed
      command: kubectl version --short
      become_user: ubuntu
      register: kube_version
    - name: Install kubectl
      shell: curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
      when: kube_version.rc==1
    - name: Granting exec permission 
      file:
        path: ./kubectl
        mode: '775'
      when: kube_version.rc==1
    - name: Moving executable to bin folder
      command: mv kubectl /usr/local/bin/
      when: kube_version.rc==1
    - name: Check if helm3 is installed
      command: helm version --short
      register: helm_version
      become_user: ubuntu
    - name: Retrieve helm binary archive.
      unarchive:
        src: https://get.helm.sh/helm-v3.2.4-linux-amd64.tar.gz
        dest: /tmp
        creates: /usr/local/bin/helm
        remoe_src: yes
      when: helm_version.rc==1
    - name: Move helm binary into place.
      command: cp /tmp/linux-amd64/helm /usr/local/bin/helm
      args:
        creates: /usr/local/bin/helm
      when: helm_version.rc==1
    - name: Install pip 
      apt: 
        name: "{{ item }}"
        update_cache: yes
      with_items:
           - python-pip
           - python3-pip
    - name: Install pip packages
      pip: 
        name: "{{ item }}"
      with_items:
           - boto
           - boto3
    - name: Create namespace
      command: kubectl create ns 100ms
      become_user: ubuntu
      ignore_errors: yes
    - name: Installing nginx ingress controller
      shell: helm install nginx-ingress helm-charts/nginx-ingress
      become_user: ubuntu
      ignore_errors: yes
    - name: Install ElastiSearchhelm chart from a git repo
      shell: helm install es helm-charts/logging/elasticsearch -n 100ms
      become_user: ubuntu
      ignore_errors: yes
    - name: Install Kibana chart from a git repo
      shell: helm install kibana helm-charts/logging/kibana -n 100ms
      become_user: ubuntu
      ignore_errors: yes
    - name: Install prometheus chart from a git repo
      shell: helm install prometheus helm-charts/monitoring/prometheus -n 100ms
      become_user: ubuntu
      ignore_errors: yes
    - name: Install grafana chart from a git repo
      shell: helm install grafana helm-charts/monitoring/grafana -n 100ms
      become_user: ubuntu
      ignore_errors: yes
    - name: Install mysql chart from a git repo
      shell: helm install mydb helm-charts/mysql -n 100ms
      become_user: ubuntu
      ignore_errors: yes
    - name: waiting for mysqldb to come
      pause:
         minutes: 1
    - name: Install 100ms chart from a git repo
      shell: helm install ms helm-charts/ms-app -n 100ms
      become_user: ubuntu
      ignore_errors: yes

    - name: Install ingress 
      shell: kubectl apply -f ingress.yaml -n 100ms
      become_user: ubuntu
    - elb_classic_lb_facts:
        region: ap-south-1
      register: elb_facts
    - name: Updting route 53 enties
      route53:
          state: present
          zone: vinga.tk
          record: "{{ item }}"
          type: A
          value: "{{ elb_facts.elbs[0].canonical_hosted_zone_name }}"
          alias: True
          alias_hosted_zone_id: "{{ elb_facts.elbs[0].canonical_hosted_zone_name_id }}"
          overwrite: yes
      with_items:
           - prometheus.vinga.tk
           - grafana.vinga.tk
           - kibana.vinga.tk
           - ms-prod.vinga.tk
           - ms-stage.vinga.tk







